{"remainingRequest":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\thread-loader\\dist\\cjs.js!D:\\vue_workspace\\iview-admin-11-7\\node_modules\\babel-loader\\lib\\index.js!D:\\vue_workspace\\iview-admin-11-7\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\vue_workspace\\iview-admin-11-7\\src\\components\\paste-editor\\plugins\\placeholder.js","dependencies":[{"path":"D:\\vue_workspace\\iview-admin-11-7\\src\\components\\paste-editor\\plugins\\placeholder.js","mtime":1541498101000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\.babelrc","mtime":1541498101000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541557854009},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nexport default (function (codemirror) {\n  (function (mod) {\n    mod(codemirror);\n  })(function (CodeMirror) {\n    CodeMirror.defineOption('placeholder', '', function (cm, val, old) {\n      var prev = old && old !== CodeMirror.Init;\n\n      if (val && !prev) {\n        cm.on('blur', onBlur);\n        cm.on('change', onChange);\n        cm.on('swapDoc', onChange);\n        onChange(cm);\n      } else if (!val && prev) {\n        cm.off('blur', onBlur);\n        cm.off('change', onChange);\n        cm.off('swapDoc', onChange);\n        clearPlaceholder(cm);\n        var wrapper = cm.getWrapperElement();\n        wrapper.className = wrapper.className.replace(' CodeMirror-empty', '');\n      }\n\n      if (val && !cm.hasFocus()) onBlur(cm);\n    });\n\n    function clearPlaceholder(cm) {\n      if (cm.state.placeholder) {\n        cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n        cm.state.placeholder = null;\n      }\n    }\n\n    function setPlaceholder(cm) {\n      clearPlaceholder(cm);\n      var elt = cm.state.placeholder = document.createElement('pre');\n      elt.style.cssText = 'height: 0; overflow: visible; color: #80848f;';\n      elt.style.direction = cm.getOption('direction');\n      elt.className = 'CodeMirror-placeholder';\n      var placeHolder = cm.getOption('placeholder');\n      if (typeof placeHolder === 'string') placeHolder = document.createTextNode(placeHolder);\n      elt.appendChild(placeHolder);\n      cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n    }\n\n    function onBlur(cm) {\n      if (isEmpty(cm)) setPlaceholder(cm);\n    }\n\n    function onChange(cm) {\n      var wrapper = cm.getWrapperElement();\n      var empty = isEmpty(cm);\n      wrapper.className = wrapper.className.replace(' CodeMirror-empty', '') + (empty ? ' CodeMirror-empty' : '');\n      if (empty) setPlaceholder(cm);else clearPlaceholder(cm);\n    }\n\n    function isEmpty(cm) {\n      return cm.lineCount() === 1 && cm.getLine(0) === '';\n    }\n  });\n});",null]}