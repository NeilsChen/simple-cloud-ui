{"remainingRequest":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\thread-loader\\dist\\cjs.js!D:\\vue_workspace\\iview-admin-11-7\\node_modules\\babel-loader\\lib\\index.js!D:\\vue_workspace\\iview-admin-11-7\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_workspace\\iview-admin-11-7\\src\\view\\user-manager\\userinfo\\usermain.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue_workspace\\iview-admin-11-7\\src\\view\\user-manager\\userinfo\\usermain.vue","mtime":1541580129709},{"path":"D:\\vue_workspace\\iview-admin-11-7\\.babelrc","mtime":1541498101000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541557854009},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\vue_workspace\\iview-admin-11-7\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { axFindUsersWithPaging, axAddUser, axDeleteUser } from '@/api/userinfo';\nimport { findAllRoles } from '@/api/roleinfo';\nexport default {\n  name: \"userinfo-table\",\n  data: function data() {\n    var _this = this;\n\n    return {\n      userColumn: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"ind\",\n        title: \"序号\",\n        width: 65,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"span\", params.index + (_this.pageInfo.currentPage - 1) * _this.pageInfo.pageSize + 1);\n        }\n      }, {\n        key: \"username\",\n        title: \"帐号\",\n        align: \"center\",\n        width: 200\n      }, {\n        key: \"nickname\",\n        title: \"名称\",\n        align: \"center\",\n        width: 200\n      }, {\n        key: \"email\",\n        title: \"邮箱\",\n        align: \"center\",\n        width: 200\n      }, {\n        key: \"cellphone\",\n        title: \"电话号码\",\n        align: \"center\",\n        width: 200\n      }, {\n        key: \"gender\",\n        title: \"性别\",\n        align: \"center\",\n        width: 100,\n        render: function render(h, params) {\n          var row = params.row;\n          var color = row.gender === 1 ? \"blue\" : row.gender === 0 ? \"red\" : \"black\";\n          var text = row.gender === 1 ? \"男\" : row.gender === 0 ? \"女\" : \"空\";\n          return h(\"Tag\", {\n            props: {\n              type: \"border\",\n              color: color\n            }\n          }, text);\n        }\n      }, {\n        key: \"address\",\n        title: \"居住地址\",\n        align: \"center\",\n        width: 200\n      }, {\n        key: \"birthday\",\n        title: \"生日\",\n        align: \"center\",\n        width: 200\n      }, {\n        key: \"status\",\n        title: \"启用状态\",\n        align: \"center\",\n        width: 100,\n        render: function render(h, params) {\n          var texts = \"空值\";\n          var color = \"black\";\n\n          if (params.row.status == 0) {\n            texts = \"未启用\";\n            color = \"yellow\";\n          } else if (params.row.status == 1) {\n            texts = \"正常\";\n            color = \"green\";\n          } else if (params.row.status == 2) {\n            texts = \"禁用\";\n            color = \"red\";\n          } else if (params.row.status == 3) {\n            texts = \"删除\";\n            color = \"gray\";\n          } // return h('div',{props: {}},texts);\n\n\n          return h(\"Tag\", {\n            props: {\n              type: \"border\",\n              color: color\n            }\n          }, texts);\n        }\n      }, {\n        key: \"roles\",\n        title: \"用户角色\",\n        align: \"center\",\n        width: 150,\n        render: function render(h, params) {\n          for (var i = 0; i < params.row.roles.length; i++) {\n            return h(\"Tag\", {\n              props: {\n                type: \"border\"\n              }\n            }, params.row.roles[i].name);\n          }\n        }\n      }, {\n        key: \"createTime\",\n        title: \"创建时间\",\n        align: \"center\",\n        width: 150,\n        render: function render(h, params) {\n          return h(\"div\", params.row.createTime == null ? \"\" : new Date(params.row.createTime).format(\"yyyy-MM-dd hh:mm:ss\"));\n        }\n      }, {\n        key: \"updateTime\",\n        title: \"最后更新时间\",\n        align: \"center\",\n        width: 150,\n        render: function render(h, params) {\n          return h(\"div\", params.row.updateTime == null ? \"\" : new Date(params.row.updateTime).format(\"yyyy-MM-dd hh:mm:ss\"));\n        }\n      }, {\n        key: \"descn\",\n        title: \"备注信息\",\n        align: \"center\",\n        width: 150\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 150,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.editUser(params);\n              }\n            }\n          }, \"修改\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.deleteUser(params, true);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      userData: [],\n      userSearchData: {\n        username: \"\",\n        nickname: \"\",\n        status: 1,\n        gender: \"\",\n        cellphone: \"\"\n      },\n      pageInfo: {\n        totalPages: 0,\n        currentPage: 1,\n        pageSize: 10,\n        pageSizeOpt: [10, 20, 30, 50]\n      },\n      value1: [1, 2],\n      addUserModal: false,\n      roleModal: false,\n      userFormItem: {\n        modalTitle: \"\",\n        modalSubmitType: \"\",\n        id: \"\",\n        username: \"\",\n        nickname: \"\",\n        email: \"\",\n        cellphone: \"\",\n        address: \"\",\n        gender: 1,\n        status: 1,\n        birthday: \"\",\n        descn: \"\"\n      },\n      roleFormItem: {\n        roleList: [],\n        allRoles: []\n      },\n      userRuleValidate: {\n        username: [{\n          required: true,\n          message: \"帐号不能为空\",\n          trigger: \"blur\"\n        }],\n        nickname: [{\n          required: true,\n          message: \"姓名不能为空\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          type: \"email\",\n          message: \"邮箱格式错误\",\n          trigger: \"blur\"\n        }]\n      },\n      roleRuleValidate: {\n        roleList: [{\n          required: true,\n          type: 'array',\n          min: 1,\n          message: '最少选择一个角色',\n          trigger: 'change'\n        }, {\n          type: 'array',\n          max: 5,\n          message: '最多选择五个角色',\n          trigger: 'change'\n        }]\n      },\n      loading: true,\n      userModalLoading: true,\n      userTableSelectData: [],\n      canEditUserRole: true,\n      canDelete: true\n    };\n  },\n  methods: {\n    init: function init() {//加载所有角色\n      //this.initRoles();\n    },\n    changePage: function changePage(page) {\n      this.pageInfo.currentPage = page;\n      this.refreshTable();\n    },\n    changeSize: function changeSize(size) {\n      this.pageInfo.pageSize = size;\n      this.refreshTable();\n    },\n    refreshTable: function refreshTable() {\n      var _this2 = this;\n\n      this.loading = true;\n      var data = {\n        username: this.userSearchData.username,\n        nickname: this.userSearchData.nickname,\n        gender: this.userSearchData.gender,\n        cellphone: this.userSearchData.cellphone,\n        status: this.userSearchData.status,\n        currentPage: this.pageInfo.currentPage,\n        pageSize: this.pageInfo.pageSize\n      };\n      var token = \"123\"; // axios-查询用户数据\n\n      axFindUsersWithPaging({\n        data: data,\n        token: token\n      }).then(function (res) {\n        _this2.pageInfo.totalPages = res.data.data.total;\n        _this2.userData = res.data.data.list;\n        _this2.loading = false;\n      }).catch(function (err) {\n        _this2.$Notice.error({\n          title: \"错误提示\",\n          duration: 5,\n          desc: err + \"<br/>无法获取后台数据！\"\n        });\n\n        _this2.loading = false;\n      });\n    },\n    //查询角色\n    initRoles: function initRoles() {\n      var _this3 = this;\n\n      this.roleFormItem.roleList = [];\n      var selectUser = this.userTableSelectData;\n\n      if (selectUser.length == 1) {\n        for (var i = 0; i < selectUser[0].roles.length; i++) {\n          this.roleFormItem.roleList[i] = selectUser[0].roles[i].id;\n        }\n      }\n\n      var data = {};\n      var token = \"123\"; //axios-查询用户角色\n\n      findAllRoles({\n        data: data,\n        token: token\n      }).then(function (res) {\n        _this3.roleFormItem.allRoles = res.data.data;\n      }).catch(function (err) {\n        _this3.$Notice.error({\n          title: \"错误提示\",\n          duration: 5,\n          desc: err + \"<br/>无法获取后台数据！\"\n        });\n      });\n    },\n    handleSearchUser: function handleSearchUser() {\n      this.refreshTable();\n    },\n    handleCancelUser: function handleCancelUser(name) {\n      this.$refs[name].resetFields();\n    },\n    addUser: function addUser() {\n      this.userFormItem = {};\n      this.userFormItem.gender = 1;\n      this.userFormItem.status = 1;\n      this.userFormItem.modalTitle = \"添加用户\";\n      this.userFormItem.modalSubmitType = \"add\";\n      this.addUserModal = true;\n    },\n    editUser: function editUser(rowdata) {\n      this.userFormItem = rowdata.row;\n      this.userFormItem.modalTitle = \"修改用户\";\n      this.userFormItem.modalSubmitType = \"edit\";\n      this.addUserModal = true;\n    },\n    deleteUser: function deleteUser(data, isbatch) {\n      var _this4 = this;\n\n      if (isbatch) {\n        this.userTableSelectData = [];\n        this.userTableSelectData[0] = data.row;\n      }\n\n      if (this.userTableSelectData.length > 0) {\n        this.$Modal.confirm({\n          title: \"提示\",\n          content: \"<h2>确定删除用户信息？</h2>\",\n          onOk: function onOk() {\n            var ids = \"\";\n\n            for (var i = 0; i < _this4.userTableSelectData.length; i++) {\n              if (i > 0) {\n                ids = ids + \",\";\n              }\n\n              ids = ids + _this4.userTableSelectData[i].id;\n            }\n\n            var params = new URLSearchParams();\n            params.append('data', ids);\n            params.append('token', '123'); //axios-删除用户\n\n            axDeleteUser(params).then(function (res) {\n              _this4.$Notice.success({\n                // title: '提示消息',\n                duration: 3,\n                desc: \"删除用户成功！\"\n              });\n\n              _this4.refreshTable();\n\n              _this4.$Loading.finish();\n            }).catch(function (err) {\n              _this4.$Notice.error({\n                title: \"错误提示\",\n                duration: 5,\n                desc: err + \"<br/>无法获取后台数据！\"\n              });\n\n              _this4.loading = false;\n            });\n          }\n        });\n      }\n    },\n    //修改用户角色\n    editUserRole: function editUserRole() {\n      this.initRoles();\n      this.roleModal = true;\n    },\n    showUserColumns: function showUserColumns() {},\n    //添加用户\n    userModalSubmit: function userModalSubmit(name) {\n      var _this5 = this;\n\n      this.$Loading.start();\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          var params = new URLSearchParams();\n          params.append('data', JSON.stringify(_this5.userFormItem));\n          params.append('token', '123');\n\n          if (_this5.userFormItem.modalSubmitType == \"add\") {\n            axAddUser(params).then(function (res) {\n              if (res.data.code == 200) {\n                _this5.$Notice.success({\n                  // title: '提示消息',\n                  duration: 3,\n                  desc: \"用户添加成功！\"\n                });\n\n                _this5.refreshTable();\n\n                _this5.$refs[name].resetFields();\n\n                _this5.$Loading.finish();\n              } else {\n                _this5.$Modal.error({\n                  width: 650,\n                  title: \"错误提示\",\n                  content: \"<p style='text-align:left;color:red;font-size:20px;word-wrap:break-word; word-break:normal;'>500 \" + res.data.msg + \" </p><p style='font-size:14px;word-wrap:break-word; word-break:normal;'>详细内容：\" + res.data.data + \"</p>\"\n                });\n\n                _this5.$Loading.error();\n              }\n            }).catch(function (error) {\n              _this5.$Notice.error({\n                title: \"错误提示\",\n                duration: 5,\n                desc: error + \"<br/>无法获取后台数据！\"\n              });\n\n              _this5.loading = false;\n            }); //修改用户\n          } else if (_this5.userFormItem.modalSubmitType == \"edit\") {\n            _this5.$axios.post(\"/admin-server/user/updateUser\", postData).then(function (res) {\n              if (res.data.code == 200) {\n                _this5.$Notice.success({\n                  // title: '提示消息',\n                  duration: 3,\n                  desc: \"用户修改成功！\"\n                });\n\n                _this5.refreshTable();\n\n                _this5.$refs[name].resetFields();\n\n                _this5.$Loading.finish();\n              }\n\n              if (res.data.code == 500) {\n                _this5.$Modal.error({\n                  width: 650,\n                  title: \"错误提示\",\n                  content: \"<p style='text-align:left;color:red;font-size:20px;word-wrap:break-word; word-break:normal;'>500 \" + res.data.msg + \" </p><p style='font-size:14px;word-wrap:break-word; word-break:normal;'>详细内容：\" + res.data.data + \"</p>\"\n                });\n\n                _this5.$Loading.error();\n              }\n            }).catch(function (error) {\n              _this5.$Notice.error({\n                title: \"错误提示\",\n                duration: 5,\n                desc: error + \"<br/>无法获取后台数据！\"\n              });\n\n              _this5.loading = false;\n            });\n          } else {\n            _this5.$Message.error(\"Fail!  DATA ERROR!!!\");\n          }\n        } else {\n          setTimeout(function () {\n            _this5.userModalLoading = false;\n\n            _this5.$nextTick(function () {\n              _this5.userModalLoading = true;\n            });\n          }, 1000);\n\n          _this5.$Message.error({\n            content: '请检查表单填写信息!',\n            duration: 3\n          });\n        }\n      });\n    },\n    userModalCancel: function userModalCancel(name) {//this.$refs[name].resetFields();\n    },\n    selectionChange: function selectionChange(selection) {\n      if (selection.length == 0) {\n        this.canEditUserRole = true;\n        this.canDelete = true;\n      } else if (selection.length >= 1) {\n        this.canEditUserRole = false;\n        this.canDelete = false;\n      }\n\n      this.userTableSelectData = selection;\n    },\n    //修改用户角色信息\n    roleModalSubmit: function roleModalSubmit() {\n      var _this6 = this;\n\n      var userids = [];\n\n      for (var i = 0; i < this.userTableSelectData.length; i++) {\n        userids[i] = this.userTableSelectData[i].id;\n      }\n\n      var data = {\n        userId: userids,\n        roleId: this.roleFormItem.roleList\n      };\n      var postData = this.$qs.stringify({\n        data: JSON.stringify(data),\n        token: \"123\"\n      });\n      this.$axios.post(\"/admin-server/user/updateUserRole\", postData).then(function (res) {\n        console.log(res);\n\n        if (res.data.code == 200) {\n          _this6.$Notice.success({\n            // title: '提示消息',\n            duration: 3,\n            desc: \"修改用户角色成功！\"\n          });\n\n          _this6.refreshTable();\n\n          _this6.$Loading.finish();\n        } else {\n          _this6.$Modal.error({\n            width: 650,\n            title: \"错误提示\",\n            content: \"<p style='text-align:left;color:red;font-size:20px;word-wrap:break-word; word-break:normal;'>500 \" + res.data.msg + \" </p><p style='font-size:14px;word-wrap:break-word; word-break:normal;'>详细内容：\" + res.data.data + \"</p>\"\n          });\n\n          _this6.$Loading.error();\n        }\n      });\n    },\n    roleModalCancel: function roleModalCancel() {}\n  },\n  mounted: function mounted() {\n    this.$Loading.start();\n    this.init();\n    this.refreshTable();\n    this.$Loading.finish();\n  }\n};",null]}